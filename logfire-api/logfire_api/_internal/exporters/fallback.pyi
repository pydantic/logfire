from _typeshed import Incomplete
from opentelemetry.sdk.trace import ReadableSpan as ReadableSpan
from opentelemetry.sdk.trace.export import SpanExportResult, SpanExporter
from typing import Sequence

class FallbackSpanExporter(SpanExporter):
    exporter: Incomplete
    fallback: Incomplete
    def __init__(self, exporter: SpanExporter, fallback: SpanExporter) -> None: ...
    def export(self, spans: Sequence[ReadableSpan]) -> SpanExportResult: ...
    def force_flush(self, timeout_millis: int = 30000) -> bool: ...
    def shutdown(self) -> None: ...
