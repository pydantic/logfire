[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "logfire"
version = "0.26.0"
description = "The best Python observability tool! ðŸªµðŸ”¥"
authors = [
    { name = "Pydantic Team", email = "engineering@pydantic.dev" },
    { name = "Samuel Colvin", email = "samuel@pydantic.dev" },
    { name = "Hasan Ramezani", email = "hasan@pydantic.dev" },
    { name = "Adrian Garcia Badaracco", email = "adrian@pydantic.dev" },
    { name = "David Montague", email = "david@pydantic.dev" },
    { name = "Marcelo Trylesinski", email = "marcelo@pydantic.dev" },
    { name = "David Hewitt", email = "david.hewitt@pydantic.dev" },
    { name = "Alex Hall", email = "alex@pydantic.dev" },
]
license = "MIT"
readme = "README.md"
dependencies = [
    "opentelemetry-sdk >= 1.21.0",
    "opentelemetry-exporter-otlp-proto-http >= 1.21.0",
    "opentelemetry-instrumentation >= 0.41b0",
    "rich >= 13.4.2",
    "protobuf >= 4.23.4",
    "typing-extensions >= 4.0.0",
    "tomli >= 2.0.1; python_version < '3.11'",
]

[project.optional-dependencies]
system-metrics = ["opentelemetry-instrumentation-system-metrics >= 0.42b0"]
aiohttp = ["opentelemetry-instrumentation-aiohttp-client >= 0.42b0"]
celery = ["opentelemetry-instrumentation-celery >= 0.42b0"]
django = ["opentelemetry-instrumentation-django >= 0.42b0"]
fastapi = ["opentelemetry-instrumentation-fastapi >= 0.42b0"]
flask = ["opentelemetry-instrumentation-flask >= 0.42b0"]
httpx = ["opentelemetry-instrumentation-httpx >= 0.42b0"]
starlette = ["opentelemetry-instrumentation-starlette >= 0.42b0"]
sqlalchemy = ["opentelemetry-instrumentation-sqlalchemy >= 0.42b0"]
psycopg2 = ["opentelemetry-instrumentation-psycopg2 >= 0.42b0"]
pymongo = ["opentelemetry-instrumentation-pymongo >= 0.42b0"]
redis = ["opentelemetry-instrumentation-redis >= 0.42b0"]
requests = ["opentelemetry-instrumentation-requests >= 0.42b0"]

[project.scripts]
logfire = "logfire.cli:main"

[project.entry-points."pydantic"]
logfire-plugin = "logfire.integrations.pydantic:plugin"

[project.entry-points."pytest11"]
logfire = "logfire.testing"

[tool.rye]
managed = true
dev-dependencies = [
    "anyio",
    "httpx",
    "starlette",
    "fastapi",
    "Flask",
    "django",
    "dirty-equals",
    "pytest",
    "pytest-django",
    "pydantic",
    "requests",
    "sqlalchemy",
    "pandas",
    "attrs",
    "openai",
    "opentelemetry-instrumentation-aiohttp-client",
    "opentelemetry-instrumentation-asgi",
    "opentelemetry-instrumentation-wsgi",
    "opentelemetry-instrumentation-fastapi",
    "opentelemetry-instrumentation-starlette",
    "opentelemetry-instrumentation-flask",
    "opentelemetry-instrumentation-django",
    "opentelemetry-instrumentation-httpx",
    "opentelemetry-instrumentation-requests",
    "opentelemetry-instrumentation-sqlalchemy",
    "opentelemetry-instrumentation-system-metrics",
    "gitpython",
    "devtools",
    "eval-type-backport",
    "requests-mock",
    "inline-snapshot",
    "structlog",
    "loguru",
    "ruff",
    "pyright",
    "pip>=24.0",
    "pre-commit>=3.7.0",
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.5.17",
    "mkdocs-glightbox>=0.3.7",
    "mkdocstrings-python>=1.8.0",
]

[tool.rye.scripts]
type-check = "pyright"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["logfire"]

# https://beta.ruff.rs/docs/configuration/
[tool.ruff]
line-length = 120

[tool.ruff.lint]
extend-select = [
    'Q',
    'RUF100',
    'C90',
    'UP',
    'I',
    'D',
    'DTZ005', # https://docs.astral.sh/ruff/rules/call-datetime-now-without-tzinfo/
] # add 'T' to disallow prints
flake8-quotes = { inline-quotes = 'single', multiline-quotes = 'double' }
isort = { combine-as-imports = true, known-first-party = ['logfire'] }
mccabe = { max-complexity = 14 }
ignore = [
    'D107', # ignore missing docstring in __init__ methods
    'D100', # ignore missing docstring in module
    'D104', # ignore missing docstring in public package
    'D105', # ignore missing docstring in magic methods
    'C901', # ignore too complex functions, doesn't seem to be worth it
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ['D']
"docs/**/*.py" = ['D']

[tool.ruff.format]
docstring-code-format = true
quote-style = 'single'

[tool.pyright]
typeCheckingMode = 'strict'
reportUnnecessaryTypeIgnoreComment = true
reportMissingTypeStubs = false
exclude = ['docs/**/*.py', 'site/**/*.py']
venvPath = '.venv'

[tool.pytest.ini_options]
xfail_strict = true
filterwarnings = [
    'error',
    # fastapi uses deprecated pydantic functions
    'ignore:`FieldValidationInfo` is deprecated.*:DeprecationWarning:pydantic_core:',
    'ignore:`general_(before|after|wrap|plain)_validator_function` is deprecated.*:DeprecationWarning:fastapi:',
    'ignore:`general_(before|after|wrap|plain)_validator_function` is deprecated.*:DeprecationWarning:pydantic_core:',
    # google packages are using deprecated APIs
    'ignore::DeprecationWarning:pkg_resources*:',
    'ignore::DeprecationWarning:google*:',
    'ignore:.* google._upb._message.*:DeprecationWarning',
    # OTEL uses some deprecated APIs
    'ignore:pkg_resources:DeprecationWarning:opentelemetry.instrumentation.dependencies*:',
    # To be able to test numpy.matrix
    'ignore:the matrix subclass is not the recommended way.*:PendingDeprecationWarning',
    # See test_filter_warnings in test_testing.py
    'ignore:(?s).*google/cloud/pubsub_v1/subscriber/_protocol/streaming_pull_manager.*scheduler\.shutdown.*IndexError. tuple index out of range:pytest.PytestUnhandledThreadExceptionWarning',
    'ignore:(?s).*aiosqlite/core\.py.*get_loop\(future\).call_soon_threadsafe.*RuntimeError. Event loop is closed:pytest.PytestUnhandledThreadExceptionWarning',
    # This problem is fixed in https://github.com/open-telemetry/opentelemetry-python-contrib/pull/2013, but not the warning.
    "ignore:The '__version__' attribute is deprecated and will be removed in Flask 3.1:DeprecationWarning",
    # ignore DeprecationWarning from httpx - Marcelo knows why this is happening
    "ignore:The 'app' shortcut is now deprecated.*:DeprecationWarning:httpx*:",
]
DJANGO_SETTINGS_MODULE = "tests.otel_integrations.django_test_project.django_test_site.settings"
